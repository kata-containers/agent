// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: agent.proto

/*
Package grpc is a generated protocol buffer package.

It is generated from these files:
	agent.proto
	oci.proto

It has these top-level messages:
	CreateContainerRequest
	StartContainerRequest
	RemoveContainerRequest
	NewProcessResponse
	ExecProcessRequest
	SignalProcessRequest
	WaitProcessRequest
	WaitProcessResponse
	WriteStreamRequest
	WriteStreamResponse
	ReadStreamRequest
	ReadStreamResponse
	CloseStdinRequest
	TtyWinResizeRequest
	CreateSandboxRequest
	DestroySandboxRequest
	IPAddress
	Interface
	Route
	AddInterfaceRequest
	RemoveInterfaceRequest
	UpdateInterfaceRequest
	RouteRequest
	OnlineCPUMemRequest
	Storage
	AddStorageRequest
	RemoveStorageRequest
	StringUser
	Spec
	Process
	Box
	User
	LinuxCapabilities
	POSIXRlimit
	Mount
	Root
	Hooks
	Hook
	Linux
	Windows
	Solaris
	LinuxIDMapping
	LinuxNamespace
	LinuxDevice
	LinuxResources
	LinuxMemory
	LinuxCPU
	LinuxWeightDevice
	LinuxThrottleDevice
	LinuxBlockIO
	LinuxPids
	LinuxDeviceCgroup
	LinuxNetwork
	LinuxHugepageLimit
	LinuxInterfacePriority
	LinuxSeccomp
	LinuxSeccompArg
	LinuxSyscall
	LinuxIntelRdt
*/
package grpc

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf2 "github.com/golang/protobuf/ptypes/empty"

import context "golang.org/x/net/context"
import grpc1 "google.golang.org/grpc"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type IPFamily int32

const (
	IPFamily_v4 IPFamily = 0
	IPFamily_v6 IPFamily = 1
)

var IPFamily_name = map[int32]string{
	0: "v4",
	1: "v6",
}
var IPFamily_value = map[string]int32{
	"v4": 0,
	"v6": 1,
}

func (x IPFamily) String() string {
	return proto.EnumName(IPFamily_name, int32(x))
}
func (IPFamily) EnumDescriptor() ([]byte, []int) { return fileDescriptorAgent, []int{0} }

type UpdateType int32

const (
	UpdateType_None     UpdateType = 0
	UpdateType_AddIP    UpdateType = 1
	UpdateType_RemoveIP UpdateType = 2
	UpdateType_Name     UpdateType = 4
	UpdateType_MTU      UpdateType = 8
)

var UpdateType_name = map[int32]string{
	0: "None",
	1: "AddIP",
	2: "RemoveIP",
	4: "Name",
	8: "MTU",
}
var UpdateType_value = map[string]int32{
	"None":     0,
	"AddIP":    1,
	"RemoveIP": 2,
	"Name":     4,
	"MTU":      8,
}

func (x UpdateType) String() string {
	return proto.EnumName(UpdateType_name, int32(x))
}
func (UpdateType) EnumDescriptor() ([]byte, []int) { return fileDescriptorAgent, []int{1} }

type CreateContainerRequest struct {
	ContainerId string      `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	StringUser  *StringUser `protobuf:"bytes,2,opt,name=string_user,json=stringUser" json:"string_user,omitempty"`
	OCI         *Spec       `protobuf:"bytes,3,opt,name=OCI" json:"OCI,omitempty"`
}

func (m *CreateContainerRequest) Reset()                    { *m = CreateContainerRequest{} }
func (m *CreateContainerRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateContainerRequest) ProtoMessage()               {}
func (*CreateContainerRequest) Descriptor() ([]byte, []int) { return fileDescriptorAgent, []int{0} }

func (m *CreateContainerRequest) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

func (m *CreateContainerRequest) GetStringUser() *StringUser {
	if m != nil {
		return m.StringUser
	}
	return nil
}

func (m *CreateContainerRequest) GetOCI() *Spec {
	if m != nil {
		return m.OCI
	}
	return nil
}

type StartContainerRequest struct {
	ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
}

func (m *StartContainerRequest) Reset()                    { *m = StartContainerRequest{} }
func (m *StartContainerRequest) String() string            { return proto.CompactTextString(m) }
func (*StartContainerRequest) ProtoMessage()               {}
func (*StartContainerRequest) Descriptor() ([]byte, []int) { return fileDescriptorAgent, []int{1} }

func (m *StartContainerRequest) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

type RemoveContainerRequest struct {
	ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// RemoveContainer will return an error if
	// it could not kill some container processes
	// after timeout seconds.
	// Setting timeout to 0 means RemoveContainer will
	// wait for ever.
	Timeout uint32 `protobuf:"varint,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (m *RemoveContainerRequest) Reset()                    { *m = RemoveContainerRequest{} }
func (m *RemoveContainerRequest) String() string            { return proto.CompactTextString(m) }
func (*RemoveContainerRequest) ProtoMessage()               {}
func (*RemoveContainerRequest) Descriptor() ([]byte, []int) { return fileDescriptorAgent, []int{2} }

func (m *RemoveContainerRequest) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

func (m *RemoveContainerRequest) GetTimeout() uint32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

// NewProcessResponse contains a Linux PID for a process
// that the agent created and manages.
// Any gRPC request from the host for a PID that is not managed
// by the agent will result in an error. For example, calling
// WaitProcess() with a WaitProcessRequest pid field set to a
// PID that was not created by the agent will return an error
// back to the caller.
type NewProcessResponse struct {
	PID uint32 `protobuf:"varint,1,opt,name=PID,proto3" json:"PID,omitempty"`
}

func (m *NewProcessResponse) Reset()                    { *m = NewProcessResponse{} }
func (m *NewProcessResponse) String() string            { return proto.CompactTextString(m) }
func (*NewProcessResponse) ProtoMessage()               {}
func (*NewProcessResponse) Descriptor() ([]byte, []int) { return fileDescriptorAgent, []int{3} }

func (m *NewProcessResponse) GetPID() uint32 {
	if m != nil {
		return m.PID
	}
	return 0
}

type ExecProcessRequest struct {
	ContainerId string      `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	StringUser  *StringUser `protobuf:"bytes,3,opt,name=string_user,json=stringUser" json:"string_user,omitempty"`
	Process     *Process    `protobuf:"bytes,4,opt,name=process" json:"process,omitempty"`
}

func (m *ExecProcessRequest) Reset()                    { *m = ExecProcessRequest{} }
func (m *ExecProcessRequest) String() string            { return proto.CompactTextString(m) }
func (*ExecProcessRequest) ProtoMessage()               {}
func (*ExecProcessRequest) Descriptor() ([]byte, []int) { return fileDescriptorAgent, []int{4} }

func (m *ExecProcessRequest) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

func (m *ExecProcessRequest) GetStringUser() *StringUser {
	if m != nil {
		return m.StringUser
	}
	return nil
}

func (m *ExecProcessRequest) GetProcess() *Process {
	if m != nil {
		return m.Process
	}
	return nil
}

type SignalProcessRequest struct {
	ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	PID         uint32 `protobuf:"varint,2,opt,name=PID,proto3" json:"PID,omitempty"`
	Signal      uint32 `protobuf:"varint,3,opt,name=signal,proto3" json:"signal,omitempty"`
}

func (m *SignalProcessRequest) Reset()                    { *m = SignalProcessRequest{} }
func (m *SignalProcessRequest) String() string            { return proto.CompactTextString(m) }
func (*SignalProcessRequest) ProtoMessage()               {}
func (*SignalProcessRequest) Descriptor() ([]byte, []int) { return fileDescriptorAgent, []int{5} }

func (m *SignalProcessRequest) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

func (m *SignalProcessRequest) GetPID() uint32 {
	if m != nil {
		return m.PID
	}
	return 0
}

func (m *SignalProcessRequest) GetSignal() uint32 {
	if m != nil {
		return m.Signal
	}
	return 0
}

type WaitProcessRequest struct {
	ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	PID         uint32 `protobuf:"varint,2,opt,name=PID,proto3" json:"PID,omitempty"`
}

func (m *WaitProcessRequest) Reset()                    { *m = WaitProcessRequest{} }
func (m *WaitProcessRequest) String() string            { return proto.CompactTextString(m) }
func (*WaitProcessRequest) ProtoMessage()               {}
func (*WaitProcessRequest) Descriptor() ([]byte, []int) { return fileDescriptorAgent, []int{6} }

func (m *WaitProcessRequest) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

func (m *WaitProcessRequest) GetPID() uint32 {
	if m != nil {
		return m.PID
	}
	return 0
}

type WaitProcessResponse struct {
	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (m *WaitProcessResponse) Reset()                    { *m = WaitProcessResponse{} }
func (m *WaitProcessResponse) String() string            { return proto.CompactTextString(m) }
func (*WaitProcessResponse) ProtoMessage()               {}
func (*WaitProcessResponse) Descriptor() ([]byte, []int) { return fileDescriptorAgent, []int{7} }

func (m *WaitProcessResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type WriteStreamRequest struct {
	ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	PID         uint32 `protobuf:"varint,2,opt,name=PID,proto3" json:"PID,omitempty"`
	Data        []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *WriteStreamRequest) Reset()                    { *m = WriteStreamRequest{} }
func (m *WriteStreamRequest) String() string            { return proto.CompactTextString(m) }
func (*WriteStreamRequest) ProtoMessage()               {}
func (*WriteStreamRequest) Descriptor() ([]byte, []int) { return fileDescriptorAgent, []int{8} }

func (m *WriteStreamRequest) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

func (m *WriteStreamRequest) GetPID() uint32 {
	if m != nil {
		return m.PID
	}
	return 0
}

func (m *WriteStreamRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type WriteStreamResponse struct {
	Len uint32 `protobuf:"varint,1,opt,name=len,proto3" json:"len,omitempty"`
}

func (m *WriteStreamResponse) Reset()                    { *m = WriteStreamResponse{} }
func (m *WriteStreamResponse) String() string            { return proto.CompactTextString(m) }
func (*WriteStreamResponse) ProtoMessage()               {}
func (*WriteStreamResponse) Descriptor() ([]byte, []int) { return fileDescriptorAgent, []int{9} }

func (m *WriteStreamResponse) GetLen() uint32 {
	if m != nil {
		return m.Len
	}
	return 0
}

type ReadStreamRequest struct {
	ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	PID         uint32 `protobuf:"varint,2,opt,name=PID,proto3" json:"PID,omitempty"`
	Len         uint32 `protobuf:"varint,3,opt,name=len,proto3" json:"len,omitempty"`
}

func (m *ReadStreamRequest) Reset()                    { *m = ReadStreamRequest{} }
func (m *ReadStreamRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadStreamRequest) ProtoMessage()               {}
func (*ReadStreamRequest) Descriptor() ([]byte, []int) { return fileDescriptorAgent, []int{10} }

func (m *ReadStreamRequest) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

func (m *ReadStreamRequest) GetPID() uint32 {
	if m != nil {
		return m.PID
	}
	return 0
}

func (m *ReadStreamRequest) GetLen() uint32 {
	if m != nil {
		return m.Len
	}
	return 0
}

type ReadStreamResponse struct {
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *ReadStreamResponse) Reset()                    { *m = ReadStreamResponse{} }
func (m *ReadStreamResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadStreamResponse) ProtoMessage()               {}
func (*ReadStreamResponse) Descriptor() ([]byte, []int) { return fileDescriptorAgent, []int{11} }

func (m *ReadStreamResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type CloseStdinRequest struct {
	ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	PID         uint32 `protobuf:"varint,2,opt,name=PID,proto3" json:"PID,omitempty"`
}

func (m *CloseStdinRequest) Reset()                    { *m = CloseStdinRequest{} }
func (m *CloseStdinRequest) String() string            { return proto.CompactTextString(m) }
func (*CloseStdinRequest) ProtoMessage()               {}
func (*CloseStdinRequest) Descriptor() ([]byte, []int) { return fileDescriptorAgent, []int{12} }

func (m *CloseStdinRequest) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

func (m *CloseStdinRequest) GetPID() uint32 {
	if m != nil {
		return m.PID
	}
	return 0
}

type TtyWinResizeRequest struct {
	ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	PID         uint32 `protobuf:"varint,2,opt,name=PID,proto3" json:"PID,omitempty"`
	Row         uint32 `protobuf:"varint,3,opt,name=row,proto3" json:"row,omitempty"`
	Column      uint32 `protobuf:"varint,4,opt,name=column,proto3" json:"column,omitempty"`
}

func (m *TtyWinResizeRequest) Reset()                    { *m = TtyWinResizeRequest{} }
func (m *TtyWinResizeRequest) String() string            { return proto.CompactTextString(m) }
func (*TtyWinResizeRequest) ProtoMessage()               {}
func (*TtyWinResizeRequest) Descriptor() ([]byte, []int) { return fileDescriptorAgent, []int{13} }

func (m *TtyWinResizeRequest) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

func (m *TtyWinResizeRequest) GetPID() uint32 {
	if m != nil {
		return m.PID
	}
	return 0
}

func (m *TtyWinResizeRequest) GetRow() uint32 {
	if m != nil {
		return m.Row
	}
	return 0
}

func (m *TtyWinResizeRequest) GetColumn() uint32 {
	if m != nil {
		return m.Column
	}
	return 0
}

type CreateSandboxRequest struct {
	Hostname     string   `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Dns          []string `protobuf:"bytes,2,rep,name=dns" json:"dns,omitempty"`
	SandboxPidns bool     `protobuf:"varint,3,opt,name=sandbox_pidns,json=sandboxPidns,proto3" json:"sandbox_pidns,omitempty"`
}

func (m *CreateSandboxRequest) Reset()                    { *m = CreateSandboxRequest{} }
func (m *CreateSandboxRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateSandboxRequest) ProtoMessage()               {}
func (*CreateSandboxRequest) Descriptor() ([]byte, []int) { return fileDescriptorAgent, []int{14} }

func (m *CreateSandboxRequest) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *CreateSandboxRequest) GetDns() []string {
	if m != nil {
		return m.Dns
	}
	return nil
}

func (m *CreateSandboxRequest) GetSandboxPidns() bool {
	if m != nil {
		return m.SandboxPidns
	}
	return false
}

type DestroySandboxRequest struct {
}

func (m *DestroySandboxRequest) Reset()                    { *m = DestroySandboxRequest{} }
func (m *DestroySandboxRequest) String() string            { return proto.CompactTextString(m) }
func (*DestroySandboxRequest) ProtoMessage()               {}
func (*DestroySandboxRequest) Descriptor() ([]byte, []int) { return fileDescriptorAgent, []int{15} }

type IPAddress struct {
	Family  IPFamily `protobuf:"varint,1,opt,name=family,proto3,enum=grpc.IPFamily" json:"family,omitempty"`
	Address string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Mask    string   `protobuf:"bytes,3,opt,name=mask,proto3" json:"mask,omitempty"`
}

func (m *IPAddress) Reset()                    { *m = IPAddress{} }
func (m *IPAddress) String() string            { return proto.CompactTextString(m) }
func (*IPAddress) ProtoMessage()               {}
func (*IPAddress) Descriptor() ([]byte, []int) { return fileDescriptorAgent, []int{16} }

func (m *IPAddress) GetFamily() IPFamily {
	if m != nil {
		return m.Family
	}
	return IPFamily_v4
}

func (m *IPAddress) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *IPAddress) GetMask() string {
	if m != nil {
		return m.Mask
	}
	return ""
}

type Interface struct {
	Device      string       `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	Name        string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	IpAddresses []*IPAddress `protobuf:"bytes,3,rep,name=ipAddresses" json:"ipAddresses,omitempty"`
	Mtu         uint64       `protobuf:"varint,4,opt,name=mtu,proto3" json:"mtu,omitempty"`
	HwAddr      string       `protobuf:"bytes,5,opt,name=hwAddr,proto3" json:"hwAddr,omitempty"`
}

func (m *Interface) Reset()                    { *m = Interface{} }
func (m *Interface) String() string            { return proto.CompactTextString(m) }
func (*Interface) ProtoMessage()               {}
func (*Interface) Descriptor() ([]byte, []int) { return fileDescriptorAgent, []int{17} }

func (m *Interface) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

func (m *Interface) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Interface) GetIpAddresses() []*IPAddress {
	if m != nil {
		return m.IpAddresses
	}
	return nil
}

func (m *Interface) GetMtu() uint64 {
	if m != nil {
		return m.Mtu
	}
	return 0
}

func (m *Interface) GetHwAddr() string {
	if m != nil {
		return m.HwAddr
	}
	return ""
}

type Route struct {
	Dest    string `protobuf:"bytes,1,opt,name=dest,proto3" json:"dest,omitempty"`
	Gateway string `protobuf:"bytes,2,opt,name=gateway,proto3" json:"gateway,omitempty"`
	Device  string `protobuf:"bytes,3,opt,name=device,proto3" json:"device,omitempty"`
}

func (m *Route) Reset()                    { *m = Route{} }
func (m *Route) String() string            { return proto.CompactTextString(m) }
func (*Route) ProtoMessage()               {}
func (*Route) Descriptor() ([]byte, []int) { return fileDescriptorAgent, []int{18} }

func (m *Route) GetDest() string {
	if m != nil {
		return m.Dest
	}
	return ""
}

func (m *Route) GetGateway() string {
	if m != nil {
		return m.Gateway
	}
	return ""
}

func (m *Route) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

type AddInterfaceRequest struct {
	Interface *Interface `protobuf:"bytes,1,opt,name=interface" json:"interface,omitempty"`
}

func (m *AddInterfaceRequest) Reset()                    { *m = AddInterfaceRequest{} }
func (m *AddInterfaceRequest) String() string            { return proto.CompactTextString(m) }
func (*AddInterfaceRequest) ProtoMessage()               {}
func (*AddInterfaceRequest) Descriptor() ([]byte, []int) { return fileDescriptorAgent, []int{19} }

func (m *AddInterfaceRequest) GetInterface() *Interface {
	if m != nil {
		return m.Interface
	}
	return nil
}

type RemoveInterfaceRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (m *RemoveInterfaceRequest) Reset()                    { *m = RemoveInterfaceRequest{} }
func (m *RemoveInterfaceRequest) String() string            { return proto.CompactTextString(m) }
func (*RemoveInterfaceRequest) ProtoMessage()               {}
func (*RemoveInterfaceRequest) Descriptor() ([]byte, []int) { return fileDescriptorAgent, []int{20} }

func (m *RemoveInterfaceRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type UpdateInterfaceRequest struct {
	Type      UpdateType `protobuf:"varint,1,opt,name=type,proto3,enum=grpc.UpdateType" json:"type,omitempty"`
	Interface *Interface `protobuf:"bytes,2,opt,name=interface" json:"interface,omitempty"`
}

func (m *UpdateInterfaceRequest) Reset()                    { *m = UpdateInterfaceRequest{} }
func (m *UpdateInterfaceRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateInterfaceRequest) ProtoMessage()               {}
func (*UpdateInterfaceRequest) Descriptor() ([]byte, []int) { return fileDescriptorAgent, []int{21} }

func (m *UpdateInterfaceRequest) GetType() UpdateType {
	if m != nil {
		return m.Type
	}
	return UpdateType_None
}

func (m *UpdateInterfaceRequest) GetInterface() *Interface {
	if m != nil {
		return m.Interface
	}
	return nil
}

type RouteRequest struct {
	Route *Route `protobuf:"bytes,1,opt,name=route" json:"route,omitempty"`
}

func (m *RouteRequest) Reset()                    { *m = RouteRequest{} }
func (m *RouteRequest) String() string            { return proto.CompactTextString(m) }
func (*RouteRequest) ProtoMessage()               {}
func (*RouteRequest) Descriptor() ([]byte, []int) { return fileDescriptorAgent, []int{22} }

func (m *RouteRequest) GetRoute() *Route {
	if m != nil {
		return m.Route
	}
	return nil
}

type OnlineCPUMemRequest struct {
}

func (m *OnlineCPUMemRequest) Reset()                    { *m = OnlineCPUMemRequest{} }
func (m *OnlineCPUMemRequest) String() string            { return proto.CompactTextString(m) }
func (*OnlineCPUMemRequest) ProtoMessage()               {}
func (*OnlineCPUMemRequest) Descriptor() ([]byte, []int) { return fileDescriptorAgent, []int{23} }

type Storage struct {
	StorageId         string            `protobuf:"bytes,1,opt,name=storage_id,json=storageId,proto3" json:"storage_id,omitempty"`
	Controller        string            `protobuf:"bytes,2,opt,name=controller,proto3" json:"controller,omitempty"`
	ControllerOptions map[string]string `protobuf:"bytes,3,rep,name=controller_options,json=controllerOptions" json:"controller_options,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Source            string            `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
	Fstype            string            `protobuf:"bytes,5,opt,name=fstype,proto3" json:"fstype,omitempty"`
	Options           []string          `protobuf:"bytes,6,rep,name=options" json:"options,omitempty"`
	MountPoint        string            `protobuf:"bytes,7,opt,name=mount_point,json=mountPoint,proto3" json:"mount_point,omitempty"`
}

func (m *Storage) Reset()                    { *m = Storage{} }
func (m *Storage) String() string            { return proto.CompactTextString(m) }
func (*Storage) ProtoMessage()               {}
func (*Storage) Descriptor() ([]byte, []int) { return fileDescriptorAgent, []int{24} }

func (m *Storage) GetStorageId() string {
	if m != nil {
		return m.StorageId
	}
	return ""
}

func (m *Storage) GetController() string {
	if m != nil {
		return m.Controller
	}
	return ""
}

func (m *Storage) GetControllerOptions() map[string]string {
	if m != nil {
		return m.ControllerOptions
	}
	return nil
}

func (m *Storage) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *Storage) GetFstype() string {
	if m != nil {
		return m.Fstype
	}
	return ""
}

func (m *Storage) GetOptions() []string {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *Storage) GetMountPoint() string {
	if m != nil {
		return m.MountPoint
	}
	return ""
}

type AddStorageRequest struct {
	Storages []*Storage `protobuf:"bytes,1,rep,name=storages" json:"storages,omitempty"`
}

func (m *AddStorageRequest) Reset()                    { *m = AddStorageRequest{} }
func (m *AddStorageRequest) String() string            { return proto.CompactTextString(m) }
func (*AddStorageRequest) ProtoMessage()               {}
func (*AddStorageRequest) Descriptor() ([]byte, []int) { return fileDescriptorAgent, []int{25} }

func (m *AddStorageRequest) GetStorages() []*Storage {
	if m != nil {
		return m.Storages
	}
	return nil
}

type RemoveStorageRequest struct {
	// array of storage_id
	Storages []string `protobuf:"bytes,1,rep,name=storages" json:"storages,omitempty"`
}

func (m *RemoveStorageRequest) Reset()                    { *m = RemoveStorageRequest{} }
func (m *RemoveStorageRequest) String() string            { return proto.CompactTextString(m) }
func (*RemoveStorageRequest) ProtoMessage()               {}
func (*RemoveStorageRequest) Descriptor() ([]byte, []int) { return fileDescriptorAgent, []int{26} }

func (m *RemoveStorageRequest) GetStorages() []string {
	if m != nil {
		return m.Storages
	}
	return nil
}

type StringUser struct {
	Uid            string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Gid            string   `protobuf:"bytes,2,opt,name=gid,proto3" json:"gid,omitempty"`
	AdditionalGids []string `protobuf:"bytes,3,rep,name=additionalGids" json:"additionalGids,omitempty"`
}

func (m *StringUser) Reset()                    { *m = StringUser{} }
func (m *StringUser) String() string            { return proto.CompactTextString(m) }
func (*StringUser) ProtoMessage()               {}
func (*StringUser) Descriptor() ([]byte, []int) { return fileDescriptorAgent, []int{27} }

func (m *StringUser) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *StringUser) GetGid() string {
	if m != nil {
		return m.Gid
	}
	return ""
}

func (m *StringUser) GetAdditionalGids() []string {
	if m != nil {
		return m.AdditionalGids
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateContainerRequest)(nil), "grpc.CreateContainerRequest")
	proto.RegisterType((*StartContainerRequest)(nil), "grpc.StartContainerRequest")
	proto.RegisterType((*RemoveContainerRequest)(nil), "grpc.RemoveContainerRequest")
	proto.RegisterType((*NewProcessResponse)(nil), "grpc.NewProcessResponse")
	proto.RegisterType((*ExecProcessRequest)(nil), "grpc.ExecProcessRequest")
	proto.RegisterType((*SignalProcessRequest)(nil), "grpc.SignalProcessRequest")
	proto.RegisterType((*WaitProcessRequest)(nil), "grpc.WaitProcessRequest")
	proto.RegisterType((*WaitProcessResponse)(nil), "grpc.WaitProcessResponse")
	proto.RegisterType((*WriteStreamRequest)(nil), "grpc.WriteStreamRequest")
	proto.RegisterType((*WriteStreamResponse)(nil), "grpc.WriteStreamResponse")
	proto.RegisterType((*ReadStreamRequest)(nil), "grpc.ReadStreamRequest")
	proto.RegisterType((*ReadStreamResponse)(nil), "grpc.ReadStreamResponse")
	proto.RegisterType((*CloseStdinRequest)(nil), "grpc.CloseStdinRequest")
	proto.RegisterType((*TtyWinResizeRequest)(nil), "grpc.TtyWinResizeRequest")
	proto.RegisterType((*CreateSandboxRequest)(nil), "grpc.CreateSandboxRequest")
	proto.RegisterType((*DestroySandboxRequest)(nil), "grpc.DestroySandboxRequest")
	proto.RegisterType((*IPAddress)(nil), "grpc.IPAddress")
	proto.RegisterType((*Interface)(nil), "grpc.Interface")
	proto.RegisterType((*Route)(nil), "grpc.Route")
	proto.RegisterType((*AddInterfaceRequest)(nil), "grpc.AddInterfaceRequest")
	proto.RegisterType((*RemoveInterfaceRequest)(nil), "grpc.RemoveInterfaceRequest")
	proto.RegisterType((*UpdateInterfaceRequest)(nil), "grpc.UpdateInterfaceRequest")
	proto.RegisterType((*RouteRequest)(nil), "grpc.RouteRequest")
	proto.RegisterType((*OnlineCPUMemRequest)(nil), "grpc.OnlineCPUMemRequest")
	proto.RegisterType((*Storage)(nil), "grpc.Storage")
	proto.RegisterType((*AddStorageRequest)(nil), "grpc.AddStorageRequest")
	proto.RegisterType((*RemoveStorageRequest)(nil), "grpc.RemoveStorageRequest")
	proto.RegisterType((*StringUser)(nil), "grpc.StringUser")
	proto.RegisterEnum("grpc.IPFamily", IPFamily_name, IPFamily_value)
	proto.RegisterEnum("grpc.UpdateType", UpdateType_name, UpdateType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc1.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc1.SupportPackageIsVersion4

// Client API for AgentService service

type AgentServiceClient interface {
	// execution
	CreateContainer(ctx context.Context, in *CreateContainerRequest, opts ...grpc1.CallOption) (*google_protobuf2.Empty, error)
	StartContainer(ctx context.Context, in *StartContainerRequest, opts ...grpc1.CallOption) (*NewProcessResponse, error)
	// RemoveContainer will tear down an existing container by forcibly terminating
	// all processes running inside that container and releasing all internal
	// resources associated with it.
	// RemoveContainer will wait for all processes termination before returning.
	// If any process can not be killed or if it can not be killed after
	// the RemoveContainerRequest timeout, RemoveContainer will return an error.
	RemoveContainer(ctx context.Context, in *RemoveContainerRequest, opts ...grpc1.CallOption) (*google_protobuf2.Empty, error)
	ExecProcess(ctx context.Context, in *ExecProcessRequest, opts ...grpc1.CallOption) (*NewProcessResponse, error)
	SignalProcess(ctx context.Context, in *SignalProcessRequest, opts ...grpc1.CallOption) (*google_protobuf2.Empty, error)
	WaitProcess(ctx context.Context, in *WaitProcessRequest, opts ...grpc1.CallOption) (*WaitProcessResponse, error)
	// stdio
	WriteStdin(ctx context.Context, in *WriteStreamRequest, opts ...grpc1.CallOption) (*WriteStreamResponse, error)
	ReadStdout(ctx context.Context, in *ReadStreamRequest, opts ...grpc1.CallOption) (*ReadStreamResponse, error)
	ReadStderr(ctx context.Context, in *ReadStreamRequest, opts ...grpc1.CallOption) (*ReadStreamResponse, error)
	CloseStdin(ctx context.Context, in *CloseStdinRequest, opts ...grpc1.CallOption) (*google_protobuf2.Empty, error)
	TtyWinResize(ctx context.Context, in *TtyWinResizeRequest, opts ...grpc1.CallOption) (*google_protobuf2.Empty, error)
	// networking
	AddInterface(ctx context.Context, in *AddInterfaceRequest, opts ...grpc1.CallOption) (*google_protobuf2.Empty, error)
	RemoveInterface(ctx context.Context, in *RemoveInterfaceRequest, opts ...grpc1.CallOption) (*google_protobuf2.Empty, error)
	UpdateInterface(ctx context.Context, in *UpdateInterfaceRequest, opts ...grpc1.CallOption) (*google_protobuf2.Empty, error)
	AddRoute(ctx context.Context, in *RouteRequest, opts ...grpc1.CallOption) (*google_protobuf2.Empty, error)
	RemoveRoute(ctx context.Context, in *RouteRequest, opts ...grpc1.CallOption) (*google_protobuf2.Empty, error)
	// misc (TODO: some rpcs can be replaced by hyperstart-exec)
	CreateSandbox(ctx context.Context, in *CreateSandboxRequest, opts ...grpc1.CallOption) (*google_protobuf2.Empty, error)
	DestroySandbox(ctx context.Context, in *DestroySandboxRequest, opts ...grpc1.CallOption) (*google_protobuf2.Empty, error)
	AddStorage(ctx context.Context, in *AddStorageRequest, opts ...grpc1.CallOption) (*google_protobuf2.Empty, error)
	RemoveStorage(ctx context.Context, in *RemoveStorageRequest, opts ...grpc1.CallOption) (*google_protobuf2.Empty, error)
	OnlineCPUMem(ctx context.Context, in *OnlineCPUMemRequest, opts ...grpc1.CallOption) (*google_protobuf2.Empty, error)
}

type agentServiceClient struct {
	cc *grpc1.ClientConn
}

func NewAgentServiceClient(cc *grpc1.ClientConn) AgentServiceClient {
	return &agentServiceClient{cc}
}

func (c *agentServiceClient) CreateContainer(ctx context.Context, in *CreateContainerRequest, opts ...grpc1.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc1.Invoke(ctx, "/grpc.AgentService/CreateContainer", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentServiceClient) StartContainer(ctx context.Context, in *StartContainerRequest, opts ...grpc1.CallOption) (*NewProcessResponse, error) {
	out := new(NewProcessResponse)
	err := grpc1.Invoke(ctx, "/grpc.AgentService/StartContainer", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentServiceClient) RemoveContainer(ctx context.Context, in *RemoveContainerRequest, opts ...grpc1.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc1.Invoke(ctx, "/grpc.AgentService/RemoveContainer", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentServiceClient) ExecProcess(ctx context.Context, in *ExecProcessRequest, opts ...grpc1.CallOption) (*NewProcessResponse, error) {
	out := new(NewProcessResponse)
	err := grpc1.Invoke(ctx, "/grpc.AgentService/ExecProcess", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentServiceClient) SignalProcess(ctx context.Context, in *SignalProcessRequest, opts ...grpc1.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc1.Invoke(ctx, "/grpc.AgentService/SignalProcess", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentServiceClient) WaitProcess(ctx context.Context, in *WaitProcessRequest, opts ...grpc1.CallOption) (*WaitProcessResponse, error) {
	out := new(WaitProcessResponse)
	err := grpc1.Invoke(ctx, "/grpc.AgentService/WaitProcess", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentServiceClient) WriteStdin(ctx context.Context, in *WriteStreamRequest, opts ...grpc1.CallOption) (*WriteStreamResponse, error) {
	out := new(WriteStreamResponse)
	err := grpc1.Invoke(ctx, "/grpc.AgentService/WriteStdin", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentServiceClient) ReadStdout(ctx context.Context, in *ReadStreamRequest, opts ...grpc1.CallOption) (*ReadStreamResponse, error) {
	out := new(ReadStreamResponse)
	err := grpc1.Invoke(ctx, "/grpc.AgentService/ReadStdout", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentServiceClient) ReadStderr(ctx context.Context, in *ReadStreamRequest, opts ...grpc1.CallOption) (*ReadStreamResponse, error) {
	out := new(ReadStreamResponse)
	err := grpc1.Invoke(ctx, "/grpc.AgentService/ReadStderr", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentServiceClient) CloseStdin(ctx context.Context, in *CloseStdinRequest, opts ...grpc1.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc1.Invoke(ctx, "/grpc.AgentService/CloseStdin", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentServiceClient) TtyWinResize(ctx context.Context, in *TtyWinResizeRequest, opts ...grpc1.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc1.Invoke(ctx, "/grpc.AgentService/TtyWinResize", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentServiceClient) AddInterface(ctx context.Context, in *AddInterfaceRequest, opts ...grpc1.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc1.Invoke(ctx, "/grpc.AgentService/AddInterface", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentServiceClient) RemoveInterface(ctx context.Context, in *RemoveInterfaceRequest, opts ...grpc1.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc1.Invoke(ctx, "/grpc.AgentService/RemoveInterface", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentServiceClient) UpdateInterface(ctx context.Context, in *UpdateInterfaceRequest, opts ...grpc1.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc1.Invoke(ctx, "/grpc.AgentService/UpdateInterface", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentServiceClient) AddRoute(ctx context.Context, in *RouteRequest, opts ...grpc1.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc1.Invoke(ctx, "/grpc.AgentService/AddRoute", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentServiceClient) RemoveRoute(ctx context.Context, in *RouteRequest, opts ...grpc1.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc1.Invoke(ctx, "/grpc.AgentService/RemoveRoute", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentServiceClient) CreateSandbox(ctx context.Context, in *CreateSandboxRequest, opts ...grpc1.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc1.Invoke(ctx, "/grpc.AgentService/CreateSandbox", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentServiceClient) DestroySandbox(ctx context.Context, in *DestroySandboxRequest, opts ...grpc1.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc1.Invoke(ctx, "/grpc.AgentService/DestroySandbox", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentServiceClient) AddStorage(ctx context.Context, in *AddStorageRequest, opts ...grpc1.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc1.Invoke(ctx, "/grpc.AgentService/AddStorage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentServiceClient) RemoveStorage(ctx context.Context, in *RemoveStorageRequest, opts ...grpc1.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc1.Invoke(ctx, "/grpc.AgentService/RemoveStorage", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentServiceClient) OnlineCPUMem(ctx context.Context, in *OnlineCPUMemRequest, opts ...grpc1.CallOption) (*google_protobuf2.Empty, error) {
	out := new(google_protobuf2.Empty)
	err := grpc1.Invoke(ctx, "/grpc.AgentService/OnlineCPUMem", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AgentService service

type AgentServiceServer interface {
	// execution
	CreateContainer(context.Context, *CreateContainerRequest) (*google_protobuf2.Empty, error)
	StartContainer(context.Context, *StartContainerRequest) (*NewProcessResponse, error)
	// RemoveContainer will tear down an existing container by forcibly terminating
	// all processes running inside that container and releasing all internal
	// resources associated with it.
	// RemoveContainer will wait for all processes termination before returning.
	// If any process can not be killed or if it can not be killed after
	// the RemoveContainerRequest timeout, RemoveContainer will return an error.
	RemoveContainer(context.Context, *RemoveContainerRequest) (*google_protobuf2.Empty, error)
	ExecProcess(context.Context, *ExecProcessRequest) (*NewProcessResponse, error)
	SignalProcess(context.Context, *SignalProcessRequest) (*google_protobuf2.Empty, error)
	WaitProcess(context.Context, *WaitProcessRequest) (*WaitProcessResponse, error)
	// stdio
	WriteStdin(context.Context, *WriteStreamRequest) (*WriteStreamResponse, error)
	ReadStdout(context.Context, *ReadStreamRequest) (*ReadStreamResponse, error)
	ReadStderr(context.Context, *ReadStreamRequest) (*ReadStreamResponse, error)
	CloseStdin(context.Context, *CloseStdinRequest) (*google_protobuf2.Empty, error)
	TtyWinResize(context.Context, *TtyWinResizeRequest) (*google_protobuf2.Empty, error)
	// networking
	AddInterface(context.Context, *AddInterfaceRequest) (*google_protobuf2.Empty, error)
	RemoveInterface(context.Context, *RemoveInterfaceRequest) (*google_protobuf2.Empty, error)
	UpdateInterface(context.Context, *UpdateInterfaceRequest) (*google_protobuf2.Empty, error)
	AddRoute(context.Context, *RouteRequest) (*google_protobuf2.Empty, error)
	RemoveRoute(context.Context, *RouteRequest) (*google_protobuf2.Empty, error)
	// misc (TODO: some rpcs can be replaced by hyperstart-exec)
	CreateSandbox(context.Context, *CreateSandboxRequest) (*google_protobuf2.Empty, error)
	DestroySandbox(context.Context, *DestroySandboxRequest) (*google_protobuf2.Empty, error)
	AddStorage(context.Context, *AddStorageRequest) (*google_protobuf2.Empty, error)
	RemoveStorage(context.Context, *RemoveStorageRequest) (*google_protobuf2.Empty, error)
	OnlineCPUMem(context.Context, *OnlineCPUMemRequest) (*google_protobuf2.Empty, error)
}

func RegisterAgentServiceServer(s *grpc1.Server, srv AgentServiceServer) {
	s.RegisterService(&_AgentService_serviceDesc, srv)
}

func _AgentService_CreateContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateContainerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServiceServer).CreateContainer(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.AgentService/CreateContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServiceServer).CreateContainer(ctx, req.(*CreateContainerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentService_StartContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartContainerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServiceServer).StartContainer(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.AgentService/StartContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServiceServer).StartContainer(ctx, req.(*StartContainerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentService_RemoveContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveContainerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServiceServer).RemoveContainer(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.AgentService/RemoveContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServiceServer).RemoveContainer(ctx, req.(*RemoveContainerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentService_ExecProcess_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExecProcessRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServiceServer).ExecProcess(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.AgentService/ExecProcess",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServiceServer).ExecProcess(ctx, req.(*ExecProcessRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentService_SignalProcess_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignalProcessRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServiceServer).SignalProcess(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.AgentService/SignalProcess",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServiceServer).SignalProcess(ctx, req.(*SignalProcessRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentService_WaitProcess_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(WaitProcessRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServiceServer).WaitProcess(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.AgentService/WaitProcess",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServiceServer).WaitProcess(ctx, req.(*WaitProcessRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentService_WriteStdin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(WriteStreamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServiceServer).WriteStdin(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.AgentService/WriteStdin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServiceServer).WriteStdin(ctx, req.(*WriteStreamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentService_ReadStdout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadStreamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServiceServer).ReadStdout(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.AgentService/ReadStdout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServiceServer).ReadStdout(ctx, req.(*ReadStreamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentService_ReadStderr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadStreamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServiceServer).ReadStderr(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.AgentService/ReadStderr",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServiceServer).ReadStderr(ctx, req.(*ReadStreamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentService_CloseStdin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloseStdinRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServiceServer).CloseStdin(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.AgentService/CloseStdin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServiceServer).CloseStdin(ctx, req.(*CloseStdinRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentService_TtyWinResize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(TtyWinResizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServiceServer).TtyWinResize(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.AgentService/TtyWinResize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServiceServer).TtyWinResize(ctx, req.(*TtyWinResizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentService_AddInterface_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddInterfaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServiceServer).AddInterface(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.AgentService/AddInterface",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServiceServer).AddInterface(ctx, req.(*AddInterfaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentService_RemoveInterface_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveInterfaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServiceServer).RemoveInterface(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.AgentService/RemoveInterface",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServiceServer).RemoveInterface(ctx, req.(*RemoveInterfaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentService_UpdateInterface_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateInterfaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServiceServer).UpdateInterface(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.AgentService/UpdateInterface",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServiceServer).UpdateInterface(ctx, req.(*UpdateInterfaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentService_AddRoute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(RouteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServiceServer).AddRoute(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.AgentService/AddRoute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServiceServer).AddRoute(ctx, req.(*RouteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentService_RemoveRoute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(RouteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServiceServer).RemoveRoute(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.AgentService/RemoveRoute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServiceServer).RemoveRoute(ctx, req.(*RouteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentService_CreateSandbox_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSandboxRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServiceServer).CreateSandbox(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.AgentService/CreateSandbox",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServiceServer).CreateSandbox(ctx, req.(*CreateSandboxRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentService_DestroySandbox_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(DestroySandboxRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServiceServer).DestroySandbox(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.AgentService/DestroySandbox",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServiceServer).DestroySandbox(ctx, req.(*DestroySandboxRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentService_AddStorage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddStorageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServiceServer).AddStorage(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.AgentService/AddStorage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServiceServer).AddStorage(ctx, req.(*AddStorageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentService_RemoveStorage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveStorageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServiceServer).RemoveStorage(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.AgentService/RemoveStorage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServiceServer).RemoveStorage(ctx, req.(*RemoveStorageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentService_OnlineCPUMem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(OnlineCPUMemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServiceServer).OnlineCPUMem(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.AgentService/OnlineCPUMem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServiceServer).OnlineCPUMem(ctx, req.(*OnlineCPUMemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AgentService_serviceDesc = grpc1.ServiceDesc{
	ServiceName: "grpc.AgentService",
	HandlerType: (*AgentServiceServer)(nil),
	Methods: []grpc1.MethodDesc{
		{
			MethodName: "CreateContainer",
			Handler:    _AgentService_CreateContainer_Handler,
		},
		{
			MethodName: "StartContainer",
			Handler:    _AgentService_StartContainer_Handler,
		},
		{
			MethodName: "RemoveContainer",
			Handler:    _AgentService_RemoveContainer_Handler,
		},
		{
			MethodName: "ExecProcess",
			Handler:    _AgentService_ExecProcess_Handler,
		},
		{
			MethodName: "SignalProcess",
			Handler:    _AgentService_SignalProcess_Handler,
		},
		{
			MethodName: "WaitProcess",
			Handler:    _AgentService_WaitProcess_Handler,
		},
		{
			MethodName: "WriteStdin",
			Handler:    _AgentService_WriteStdin_Handler,
		},
		{
			MethodName: "ReadStdout",
			Handler:    _AgentService_ReadStdout_Handler,
		},
		{
			MethodName: "ReadStderr",
			Handler:    _AgentService_ReadStderr_Handler,
		},
		{
			MethodName: "CloseStdin",
			Handler:    _AgentService_CloseStdin_Handler,
		},
		{
			MethodName: "TtyWinResize",
			Handler:    _AgentService_TtyWinResize_Handler,
		},
		{
			MethodName: "AddInterface",
			Handler:    _AgentService_AddInterface_Handler,
		},
		{
			MethodName: "RemoveInterface",
			Handler:    _AgentService_RemoveInterface_Handler,
		},
		{
			MethodName: "UpdateInterface",
			Handler:    _AgentService_UpdateInterface_Handler,
		},
		{
			MethodName: "AddRoute",
			Handler:    _AgentService_AddRoute_Handler,
		},
		{
			MethodName: "RemoveRoute",
			Handler:    _AgentService_RemoveRoute_Handler,
		},
		{
			MethodName: "CreateSandbox",
			Handler:    _AgentService_CreateSandbox_Handler,
		},
		{
			MethodName: "DestroySandbox",
			Handler:    _AgentService_DestroySandbox_Handler,
		},
		{
			MethodName: "AddStorage",
			Handler:    _AgentService_AddStorage_Handler,
		},
		{
			MethodName: "RemoveStorage",
			Handler:    _AgentService_RemoveStorage_Handler,
		},
		{
			MethodName: "OnlineCPUMem",
			Handler:    _AgentService_OnlineCPUMem_Handler,
		},
	},
	Streams:  []grpc1.StreamDesc{},
	Metadata: "agent.proto",
}

func init() { proto.RegisterFile("agent.proto", fileDescriptorAgent) }

var fileDescriptorAgent = []byte{
	// 1326 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0x6d, 0x6f, 0x13, 0x47,
	0x10, 0xc6, 0x2f, 0x49, 0x7c, 0x63, 0x3b, 0x71, 0x36, 0x21, 0xb8, 0x86, 0xb6, 0xf4, 0x8a, 0x20,
	0x45, 0xc5, 0x88, 0xb4, 0x42, 0x2d, 0x12, 0xad, 0x8c, 0x93, 0xa6, 0xfe, 0x00, 0x58, 0x6b, 0x22,
	0xaa, 0x4a, 0x55, 0xb4, 0x78, 0x37, 0xe6, 0x84, 0x7d, 0x7b, 0xdd, 0xdb, 0x4b, 0x70, 0x7f, 0x43,
	0xbf, 0xb5, 0x52, 0xff, 0x55, 0x7f, 0x53, 0xb5, 0x6f, 0xbe, 0xb3, 0x7d, 0x09, 0x25, 0xf0, 0xe9,
	0x76, 0x66, 0xe7, 0x9e, 0x79, 0xd9, 0xd9, 0x9d, 0x07, 0xaa, 0x64, 0xc4, 0x42, 0xd9, 0x8e, 0x04,
	0x97, 0x1c, 0x95, 0x47, 0x22, 0x1a, 0xb6, 0x3c, 0x3e, 0x0c, 0x8c, 0xa2, 0x75, 0x7d, 0xc4, 0xf9,
	0x68, 0xcc, 0xee, 0x6b, 0xe9, 0x55, 0x72, 0x72, 0x9f, 0x4d, 0x22, 0x39, 0x35, 0x9b, 0xfe, 0x9f,
	0x05, 0xd8, 0xe9, 0x0a, 0x46, 0x24, 0xeb, 0xf2, 0x50, 0x92, 0x20, 0x64, 0x02, 0xb3, 0xdf, 0x13,
	0x16, 0x4b, 0xf4, 0x05, 0xd4, 0x86, 0x4e, 0x77, 0x1c, 0xd0, 0x66, 0xe1, 0x66, 0x61, 0xd7, 0xc3,
	0xd5, 0x99, 0xae, 0x47, 0xd1, 0x03, 0xa8, 0xc6, 0x52, 0x04, 0xe1, 0xe8, 0x38, 0x89, 0x99, 0x68,
	0x16, 0x6f, 0x16, 0x76, 0xab, 0x7b, 0x8d, 0xb6, 0x8a, 0xa0, 0x3d, 0xd0, 0x1b, 0x47, 0x31, 0x13,
	0x18, 0xe2, 0xd9, 0x1a, 0xdd, 0x80, 0xd2, 0xf3, 0x6e, 0xaf, 0x59, 0xd2, 0xa6, 0x60, 0x4d, 0x23,
	0x36, 0xc4, 0x4a, 0xed, 0x3f, 0x82, 0xab, 0x03, 0x49, 0x84, 0xbc, 0x44, 0x30, 0xfe, 0x11, 0xec,
	0x60, 0x36, 0xe1, 0xa7, 0x97, 0xca, 0xa4, 0x09, 0x6b, 0x32, 0x98, 0x30, 0x9e, 0x48, 0x9d, 0x45,
	0x1d, 0x3b, 0xd1, 0xbf, 0x0d, 0xe8, 0x19, 0x3b, 0xeb, 0x0b, 0x3e, 0x64, 0x71, 0x8c, 0x59, 0x1c,
	0xf1, 0x30, 0x66, 0xa8, 0x01, 0xa5, 0x7e, 0x6f, 0x5f, 0x23, 0xd5, 0xb1, 0x5a, 0xfa, 0x7f, 0x15,
	0x00, 0x1d, 0xbc, 0x65, 0xc3, 0x99, 0xe5, 0x65, 0xab, 0x58, 0xfa, 0x1f, 0x55, 0xbc, 0x03, 0x6b,
	0x91, 0xf1, 0xd3, 0x2c, 0x6b, 0xf3, 0xba, 0x31, 0x77, 0xce, 0xdd, 0xae, 0x3f, 0x84, 0xed, 0x41,
	0x30, 0x0a, 0xc9, 0xf8, 0xfd, 0xc3, 0xb2, 0x29, 0x16, 0x67, 0x29, 0xa2, 0x1d, 0x58, 0x8d, 0x35,
	0x98, 0x8e, 0xb1, 0x8e, 0xad, 0xe4, 0xf7, 0x00, 0xbd, 0x24, 0x81, 0xfc, 0x08, 0x2e, 0xfc, 0x7b,
	0xb0, 0x35, 0x07, 0x65, 0xcb, 0xad, 0x3c, 0x4b, 0x22, 0x93, 0x58, 0xa3, 0xac, 0x60, 0x2b, 0xf9,
	0xbf, 0x01, 0x7a, 0x29, 0x02, 0xc9, 0x06, 0x52, 0x30, 0x32, 0xf9, 0xa0, 0xe4, 0x10, 0x94, 0x29,
	0x91, 0x44, 0xa7, 0x56, 0xc3, 0x7a, 0xed, 0xdf, 0x81, 0xad, 0x39, 0xf8, 0xf4, 0xf0, 0xc7, 0x2c,
	0x74, 0x87, 0x3f, 0x66, 0xa1, 0xff, 0x2b, 0x6c, 0x62, 0x46, 0xe8, 0x47, 0x08, 0xc3, 0x62, 0x97,
	0x52, 0xec, 0x5d, 0x40, 0x59, 0x6c, 0x1b, 0x83, 0x0b, 0xb7, 0x90, 0x09, 0xf7, 0x67, 0xd8, 0xec,
	0x8e, 0x79, 0xcc, 0x06, 0x92, 0x06, 0xe1, 0x07, 0x1d, 0x83, 0x84, 0xad, 0x17, 0x72, 0xfa, 0x52,
	0xa1, 0xc4, 0xc1, 0x1f, 0xec, 0x43, 0x33, 0x12, 0xfc, 0xcc, 0x65, 0x24, 0xf8, 0x99, 0x3a, 0xcd,
	0x21, 0x1f, 0x27, 0x93, 0x50, 0x37, 0x6f, 0x1d, 0x5b, 0xc9, 0x0f, 0x60, 0xdb, 0xbc, 0x45, 0x03,
	0x12, 0xd2, 0x57, 0xfc, 0xad, 0x73, 0xdb, 0x82, 0xca, 0x6b, 0x1e, 0xcb, 0x90, 0x4c, 0x98, 0x75,
	0x39, 0x93, 0x15, 0x3a, 0x0d, 0xe3, 0x66, 0xf1, 0x66, 0x69, 0xd7, 0xc3, 0x6a, 0x89, 0xbe, 0x84,
	0x7a, 0x6c, 0xfe, 0x3f, 0x8e, 0x02, 0xb5, 0xa7, 0x3c, 0x57, 0x70, 0xcd, 0x2a, 0xfb, 0x4a, 0xe7,
	0x5f, 0x83, 0xab, 0xfb, 0x2c, 0x96, 0x82, 0x4f, 0xe7, 0x7d, 0xf9, 0x04, 0xbc, 0x5e, 0xbf, 0x43,
	0xa9, 0x60, 0x71, 0x8c, 0x6e, 0xc3, 0xea, 0x09, 0x99, 0x04, 0xe3, 0xa9, 0x76, 0xbb, 0xbe, 0xb7,
	0x6e, 0x6e, 0x59, 0xaf, 0xff, 0x93, 0xd6, 0x62, 0xbb, 0xab, 0x5e, 0x0f, 0x62, 0x7e, 0xd1, 0x89,
	0x7b, 0xd8, 0x89, 0xea, 0x98, 0x26, 0x24, 0x7e, 0xa3, 0x63, 0xf0, 0xb0, 0x5e, 0xfb, 0x7f, 0x17,
	0xc0, 0xeb, 0x85, 0x92, 0x89, 0x13, 0x32, 0xd4, 0xad, 0x4d, 0xd9, 0x69, 0x30, 0x74, 0xa9, 0x59,
	0x49, 0xfd, 0xa9, 0x13, 0x36, 0x80, 0x7a, 0xad, 0x5e, 0x8a, 0x20, 0xb2, 0xc1, 0x31, 0x95, 0x58,
	0x69, 0xb7, 0xba, 0xb7, 0xe1, 0x82, 0xb2, 0x1b, 0x38, 0x6b, 0xa3, 0xea, 0x33, 0x91, 0x89, 0x2e,
	0x74, 0x19, 0xab, 0xa5, 0x72, 0xf8, 0xfa, 0x4c, 0x19, 0x34, 0x57, 0x8c, 0x43, 0x23, 0xf9, 0x4f,
	0x61, 0x05, 0xf3, 0x44, 0x9a, 0xd6, 0x62, 0xb1, 0xb4, 0xf1, 0xe8, 0xb5, 0xca, 0x70, 0x44, 0x24,
	0x3b, 0x23, 0x53, 0x97, 0xa1, 0x15, 0x33, 0xf1, 0x97, 0xb2, 0xf1, 0xfb, 0xfb, 0xb0, 0xd5, 0xa1,
	0x74, 0x96, 0xa7, 0x3b, 0xcb, 0x7b, 0xe0, 0x05, 0x4e, 0xa7, 0x3d, 0xa4, 0x09, 0xcc, 0x4c, 0x53,
	0x0b, 0xff, 0x6b, 0xf7, 0xa8, 0x2f, 0x01, 0xb9, 0xfa, 0x14, 0xd2, 0xfa, 0xf8, 0x13, 0xd8, 0x39,
	0x8a, 0x28, 0x91, 0xcb, 0xd6, 0xb7, 0xa0, 0x2c, 0xa7, 0x11, 0xb3, 0xe7, 0x68, 0x1f, 0x57, 0x63,
	0xfb, 0x62, 0x1a, 0x31, 0xac, 0x77, 0xe7, 0x83, 0x2b, 0xbe, 0x33, 0xb8, 0x07, 0x50, 0xd3, 0x15,
	0x4b, 0xaf, 0xc7, 0x8a, 0x50, 0xb2, 0xcd, 0xab, 0x6a, 0x7e, 0x35, 0x26, 0x66, 0xc7, 0xbf, 0x0a,
	0x5b, 0xcf, 0xc3, 0x71, 0x10, 0xb2, 0x6e, 0xff, 0xe8, 0x29, 0x73, 0x4f, 0x85, 0xff, 0x6f, 0x11,
	0xd6, 0x06, 0x92, 0x0b, 0x32, 0x62, 0xe8, 0x53, 0x80, 0xd8, 0x2c, 0xd3, 0x2b, 0xe6, 0x59, 0x4d,
	0x8f, 0xa2, 0xcf, 0x00, 0xd4, 0x7d, 0x13, 0x7c, 0x3c, 0xb6, 0x23, 0xd7, 0xc3, 0x19, 0x0d, 0x1a,
	0x00, 0x4a, 0xa5, 0x63, 0x1e, 0xc9, 0x80, 0x87, 0xae, 0x55, 0x6e, 0xb9, 0xa1, 0xa2, 0xc1, 0xda,
	0xdd, 0x99, 0xdd, 0x73, 0x63, 0x76, 0x10, 0x4a, 0x31, 0xc5, 0x9b, 0xc3, 0x45, 0xbd, 0x7e, 0x7f,
	0x79, 0x22, 0x86, 0x4c, 0x37, 0x92, 0x87, 0xad, 0xa4, 0xf4, 0x27, 0xb1, 0x2e, 0xac, 0xed, 0x25,
	0x23, 0xa9, 0x76, 0x71, 0x9e, 0x57, 0xf5, 0xcd, 0x74, 0x22, 0xfa, 0x1c, 0xaa, 0x13, 0x9e, 0x84,
	0xf2, 0x38, 0xe2, 0x41, 0x28, 0x9b, 0x6b, 0x26, 0x7e, 0xad, 0xea, 0x2b, 0x4d, 0x6b, 0x1f, 0x76,
	0xf2, 0xe3, 0x52, 0xad, 0xfc, 0x86, 0x4d, 0x6d, 0x45, 0xd4, 0x12, 0x6d, 0xc3, 0xca, 0x29, 0x19,
	0x27, 0xee, 0x92, 0x18, 0xe1, 0x51, 0xf1, 0xbb, 0x82, 0xff, 0x03, 0x6c, 0x76, 0x28, 0xb5, 0x89,
	0xba, 0xf3, 0xf9, 0x0a, 0x2a, 0xb6, 0x8e, 0x6a, 0x8e, 0x94, 0xd2, 0xb1, 0xe9, 0xec, 0x66, 0xdb,
	0xfe, 0x1e, 0x6c, 0x9b, 0xbe, 0x5b, 0x80, 0x68, 0x2d, 0x40, 0x78, 0x99, 0x7f, 0x7e, 0x01, 0x48,
	0xc7, 0xb5, 0x8a, 0x36, 0x99, 0x9d, 0x9f, 0x5a, 0x2a, 0xcd, 0x28, 0xa0, 0x36, 0x56, 0xb5, 0x44,
	0xb7, 0x61, 0x9d, 0x50, 0x1a, 0xa8, 0x1c, 0xc9, 0xf8, 0x30, 0xa0, 0xe6, 0x9c, 0x3c, 0xbc, 0xa0,
	0xbd, 0xdb, 0x82, 0x8a, 0x7b, 0x73, 0xd0, 0x2a, 0x14, 0x4f, 0xbf, 0x6d, 0x5c, 0xd1, 0xdf, 0x87,
	0x8d, 0xc2, 0xdd, 0x27, 0x00, 0x69, 0x1f, 0xa3, 0x0a, 0x94, 0x9f, 0xf1, 0x90, 0x35, 0xae, 0x20,
	0x0f, 0x56, 0xd4, 0xfd, 0xeb, 0x37, 0x0a, 0xa8, 0x06, 0x15, 0x7b, 0x89, 0xfa, 0x8d, 0xa2, 0x36,
	0x21, 0x13, 0xd6, 0x28, 0xa3, 0x35, 0x28, 0x3d, 0x7d, 0x71, 0xd4, 0xa8, 0xec, 0xfd, 0x53, 0x85,
	0x5a, 0x47, 0x71, 0xc8, 0x01, 0x13, 0xfa, 0xf1, 0x39, 0x84, 0x8d, 0x05, 0x56, 0x88, 0x6e, 0x98,
	0x52, 0xe5, 0x93, 0xc5, 0xd6, 0x4e, 0xdb, 0xb0, 0xcc, 0xb6, 0x63, 0x99, 0xed, 0x03, 0xc5, 0x32,
	0xd1, 0x21, 0xac, 0xcf, 0x13, 0x3a, 0x74, 0xdd, 0x95, 0x3c, 0x87, 0xe6, 0xb5, 0x9a, 0x66, 0x33,
	0x87, 0x70, 0x1d, 0xc2, 0xc6, 0x02, 0xbb, 0x73, 0x11, 0xe5, 0x93, 0xbe, 0x73, 0x23, 0xea, 0x40,
	0x35, 0x43, 0xd3, 0x90, 0xf5, 0xb8, 0xcc, 0xdc, 0x2e, 0x88, 0xa5, 0x0b, 0xf5, 0x39, 0x52, 0x85,
	0x5a, 0x36, 0xa7, 0x1c, 0xa6, 0x75, 0x6e, 0x1c, 0x4f, 0xa0, 0x9a, 0x61, 0x3a, 0x2e, 0x8e, 0x65,
	0x1e, 0xd5, 0xfa, 0x24, 0x67, 0xc7, 0x06, 0xd2, 0x01, 0xb0, 0xfc, 0x84, 0x06, 0xe1, 0x0c, 0x62,
	0x89, 0x10, 0xcd, 0x20, 0x72, 0xb8, 0xcc, 0x8f, 0x00, 0x86, 0x5d, 0x50, 0x9e, 0x48, 0x74, 0xcd,
	0x95, 0x74, 0x81, 0xcb, 0xb8, 0x62, 0xe4, 0x10, 0x91, 0x14, 0x80, 0x09, 0x71, 0x19, 0x80, 0xc7,
	0x00, 0x29, 0x6b, 0x71, 0x00, 0x4b, 0x3c, 0xe6, 0x82, 0xf3, 0xac, 0x65, 0xa9, 0x0a, 0xb2, 0xb9,
	0xe6, 0xd0, 0x97, 0x8b, 0x20, 0xb2, 0xa3, 0xca, 0x41, 0xe4, 0x8c, 0xaf, 0x0b, 0xfa, 0x7c, 0x63,
	0x61, 0x4e, 0xcd, 0xb7, 0xe7, 0xfb, 0x00, 0x2d, 0x8c, 0x30, 0x07, 0x94, 0x3f, 0xd9, 0xce, 0x05,
	0x7a, 0x08, 0x95, 0x0e, 0xa5, 0x76, 0xa2, 0x67, 0x27, 0xd1, 0x3b, 0xfe, 0xfb, 0x1e, 0xaa, 0x26,
	0xe4, 0xf7, 0xff, 0xb5, 0x0b, 0xf5, 0x39, 0xfe, 0xe6, 0xee, 0x45, 0x1e, 0xa9, 0x3b, 0x17, 0xe4,
	0x00, 0xd6, 0xe7, 0x99, 0x99, 0x7b, 0x31, 0x72, 0xf9, 0xda, 0xb9, 0x30, 0x8f, 0x01, 0xd2, 0x01,
	0xe0, 0xba, 0x6a, 0x69, 0x24, 0x5c, 0x94, 0xca, 0xdc, 0xfb, 0xef, 0x52, 0xc9, 0x1b, 0x0a, 0x17,
	0xf5, 0x55, 0x76, 0xd8, 0xbb, 0xbe, 0xca, 0x21, 0x00, 0xe7, 0x41, 0xbc, 0x5a, 0xd5, 0xf2, 0x37,
	0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0x8f, 0xe2, 0xb5, 0x33, 0xe3, 0x0f, 0x00, 0x00,
}
